smtp {
    host=smtp.gmail.com
    port=587
	ssl=true
	tls=true
	user="override_this_user@address.com"
	user=${?EMAIL_USER}
	password="override_this_password"
    password=${?EMAIL_PASSWORD}
    from="override_this_user@address.com"
    from=${?EMAIL_ADDRESS}
}

securesocial {
    # Where to redirect the user if SecureSocial can't figure that out from
    # the request that was received before authenticating the user
    onLoginGoTo=/

    # Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
    # onLogoutGoTo=/login

    # Enable SSL 
    # TODO enable in production
    ssl=false    

    # The controller class for assets. This is optional, only required
    # when you use a custom class for Assets.
    # assetsController=controllers.ReverseMyCustomAssetsController

	cookie {
		#name=id
		#path=/
		#domain=some_domain
		#httpOnly=true
		#idleTimeoutInMinutes=30
		#absoluteTimeOutInMinutes=720
    }

	userpass {      
		withUserNameSupport=false
		sendWelcomeEmail=false
		enableGravatarSupport=true
		signupSkipLogin=true
		tokenDuration=60
		tokenDeleteInterval=5
		minimumPasswordLength=8
		enableTokenJob=true
		hasher=bcrypt
	}
	
	facebook {
		authorizationUrl="https://graph.facebook.com/oauth/authorize"
		accessTokenUrl="https://graph.facebook.com/oauth/access_token"
		clientId=override_this_app_id
		clientId=${?FACEBOOK_APP_ID}
		clientSecret=override_this_secret
		clientSecret=${?FACEBOOK_APP_SECRET}
		# this scope is the minimum SecureSocial requires.  You can add more if required by your app.
		scope=email
	}
	
	google {
		authorizationUrl="https://accounts.google.com/o/oauth2/auth"
		accessTokenUrl="https://accounts.google.com/o/oauth2/token"
		clientId=override_this_id
		clientId=${?GOOGLE_CLIENT_ID}
		clientSecret=override_this_secret
        clientSecret=${?GOOGLE_SECRET}
		scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
	}

}